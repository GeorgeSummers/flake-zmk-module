#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        enter_gaming {
            bindings = <&to 3>;
            key-positions = <26 15 28>;
            layers = <2>;
        };

        leave_gaming {
            bindings = <&to 0>;
            key-positions = <23 22 21>;
            layers = <3 5>;
        };

        bckspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <23 22>;
            layers = <0>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <12 13>;
            layers = <0 3>;
        };

        shift-insert {
            bindings = <&kp LS(INSERT)>;
            key-positions = <20 55>;
            layers = <0>;
        };

        ctrl-insert {
            bindings = <&kp LC(INS)>;
            key-positions = <36 20>;
            layers = <0>;
        };
    };

    macros {
        bt_clr_0: bt_clr_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
            label = "BT_CLR_0";
        };

        bt_clr_1: bt_clr_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
            label = "BT_CLR_1";
        };

        bt_clr_2: bt_clr_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
            label = "BT_CLR_2";
        };

        bt_clr_3: bt_clr_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
            label = "BT_CLR_3";
        };

        bt_clr_4: bt_clr_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
            label = "BT_CLR_4";
        };
    };

    behaviors {
        bt0: bt0 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT0";
            bindings = <&bt BT_SEL 0>, <&bt_clr_0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt1: bt1 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT1";
            bindings = <&bt BT_SEL 1>, <&bt_clr_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt2: bt2 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT2";
            bindings = <&bt BT_SEL 2>, <&bt_clr_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt3: bt3 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT3";
            bindings = <&bt BT_SEL 3>, <&bt_clr_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt4: bt4 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT4";
            bindings = <&bt BT_SEL 4>, <&bt_clr_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none               &none           &none         &none         &none      &none    &none  &none      &none            &none          &none          &none
&kp GRAVE           &kp Q           &kp W         &kp E         &kp R      &kp T    &kp Y  &kp U      &kp I            &kp O          &kp P          &kp LEFT_BRACKET
&mt LEFT_SHIFT TAB  &kp A           &kp S         &kp D         &kp F      &kp G    &kp H  &kp J      &kp K            &kp L          &kp SEMI       &kp APOS
&kp LCTRL           &kp Z           &kp X         &kp C         &kp V      &kp B    &kp N  &kp M      &kp COMMA        &kp DOT        &kp FSLH       &kp RBKT
                    &kp LEFT_SHIFT  &kp LEFT_WIN  &kp LEFT_ALT  &kp SPACE  &mo 1    &mo 1  &kp ENTER  &kp RIGHT_SHIFT  &kp BACKSPACE  &mt K_APP DEL
            >;
        };

        num {
            bindings = <
&none      &none             &none       &none       &none         &none                    &none         &none   &none   &none   &none                &none
&kp GRAVE  &kp N1            &kp N2      &kp N3      &kp NUMBER_4  &kp N5                   &kp N6        &kp N7  &kp N8  &kp N9  &kp N0               &kp MINUS
&kp END    &kp LEFT          &kp DOWN    &kp UP      &kp RIGHT     &kp LEFT_PARENTHESIS     &kp LS(N6)    &kp N4  &kp N5  &kp N6  &kp UNDERSCORE       &kp EQUAL
&kp HOME   &kp LS(NUMBER_1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)    &kp RIGHT_PARENTHESIS    &kp ASTERISK  &kp N1  &kp N2  &kp N3  &kp LS(N7)           &kp BACKSLASH
           &sk LSHIFT        &kp INS     &trans      &trans        &mo 2                    &mo 2         &trans  &trans  &kp N0  &kp LA(PRINTSCREEN)
            >;
        };

        fn {
            bindings = <
&none  &none    &none   &none   &none   &none             &none  &none       &none         &none         &none         &none
&none  &kp F12  &kp F7  &kp F8  &kp F9  &soft_off         &bt2   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP  &none
&none  &kp F10  &kp F4  &kp F5  &kp F6  &sk LALT          &bt1   &kp RSHFT   &kp RCTRL     &kp RALT      &kp RGUI      &none
&none  &kp F11  &kp F1  &kp F2  &kp F3  &studio_unlock    &bt0   &kp C_PP    &kp C_PREV    &kp C_NEXT    &kp C_BRI_DN  &none
       &trans   &trans  &trans  &trans  &none             &none  &trans      &trans        &trans        &trans
            >;
        };

        gaming {
            bindings = <
&none      &none         &none         &none         &none      &none    &none  &none      &none      &none     &none      &none
&kp ESC    &kp TAB       &kp Q         &kp W         &kp E      &kp R    &kp Y  &kp U      &kp I      &kp O     &kp P      &kp BSPC
&kp ENTER  &kp LSHFT     &kp A         &kp S         &kp D      &kp F    &kp H  &kp J      &kp K      &kp L     &kp SEMI   &kp APOS
&kp LBKT   &kp LCTRL     &kp Z         &kp X         &kp C      &kp V    &kp N  &kp M      &kp COMMA  &kp DOT   &kp FSLH   &kp RBKT
           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SPACE  &mo 4    &sl 5  &kp LSHFT  &kp LGUI   &kp LALT  &kp LCTRL
            >;
        };

        gaming_num {
            bindings = <
&trans  &trans   &trans    &trans    &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp ESC  &kp BSPC  &kp CAPS  &kp ENTER  &kp DEL    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N1   &kp N2    &kp N3    &kp N4     &kp N5     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N6   &kp N7    &kp N8    &kp N9     &kp N0     &trans  &trans  &trans  &trans  &trans  &trans
        &trans   &trans    &trans    &trans     &trans     &trans  &trans  &trans  &trans  &trans
            >;
        };

        GAMING_ZXC {
            bindings = <
&none    &none      &none  &none     &none      &none    &none  &none      &none     &none          &none  &none
&kp ESC  &none      &kp Q  &kp W     &kp E      &kp R    &none  &none      &none     &none          &none  &none
&kp TAB  &kp LSHFT  &kp A  &kp S     &kp D      &kp F    &none  &none      &kp UP    &none          &none  &none
&none    &kp LCTRL  &kp Z  &kp X     &kp C      &kp V    &none  &kp LEFT   &kp DOWN  &kp RIGHT      &none  &none
         &none      &none  &kp LALT  &kp SPACE  &none    &to 3  &kp ENTER  &none     &kp BACKSPACE  &none
            >;
        };
    };
};
